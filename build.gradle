/*
 * Copyright 2021 Benjamin Martin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'maven'
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

group = 'net.lapismc'
archivesBaseName = "LastOnline"
version = '1.2.0'
description = 'See who has been online most recently'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
    mavenLocal()
    //Spigot Repo
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/groups/public/')
    }
}

dependencies {
    compile 'net.lapismc:LapisCore:1.8.2'
    compile 'org.ocpsoft.prettytime:prettytime:5.0.1.Final'
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
}

processResources {
    filter {
        it.replace('${project.version}', project.getVersion())
    }
}

shadowJar {
    archiveFileName.set(archivesBaseName + ".jar")
    exclude 'javax/**'
    relocate("org.ocpsoft.prettytime", "net.lapismc.lastonline.prettytime")
    relocate("net.lapismc.lapiscore", "net.lapismc.lastonline.core")
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
